@{
    ViewBag.Title = "About";
}
<h2>Performance checker</h2>

<button onclick="change()">Cambio de sinoptico</button>
<p></p>
<table id="list" style="width:80%">
    <tbody>
        <tr>
            <th>No.</th>
            <th>Widget</th>
            <th>Delay</th>
            <th>Last change</th>
        </tr>
    </tbody>
</table>

<script>
    change = () => {
        var datetime1 = Date.now();
        $.post({
            url: 'PostValue?guid=' + createUUID(), success: () => {
                alert('Delay: ' + (Date.now() - datetime1) / 1000 + ' s.');
            }
        });
    }

    createUUID = () => {
        // http://www.ietf.org/rfc/rfc4122.txt
        var s = [];
        var hexDigits = "0123456789abcdef";
        for (var i = 0; i < 36; i++) {
            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
        }
        s[14] = "4";  // bits 12-15 of the time_hi_and_version field to 0010
        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01
        s[8] = s[13] = s[18] = s[23] = "-";

        var uuid = s.join("");
        return uuid;
    }

    generateWidget = (n, guid) => {
        var widget = {};
        widget.lock = false;
        widget.guid = guid;
        widget.check = () => {            
            if (!widget.lock) {
                widget.lock = true;
                var oldValue = $('#_' + widget.guid).html();
                $.post({
                    url: "PostValue?guid=" + widget.guid,
                    success: (datetime) => {
                        $('#_' + widget.guid).html(datetime);
                        $('#' + widget.guid).html(parseFloat((datetime - oldValue) / 1000).toFixed(2) + ' s.');
                    },
                    complete: () => {
                        widget.lock = false;
                    }
                });
            }
        };

        $('#list > tbody').append('<tr><td>' + n + ' </td><td>' + widget.guid + ' </td><td id =\'' + widget.guid + '\'></td><td id =\'_' + widget.guid + '\'>' + Date.now() + '</td></tr>');

        return widget;
    };

    for (var i = 0; i < 32; i++) {
        var w = generateWidget(i + 1, createUUID());
        setInterval(w.check, 1000);
    }
</script>